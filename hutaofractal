// The Hu Tao Fractal
// Author: Dan Shan
// create up to 9 grids (with given constraints)
// continuosly eliminate invalid grids and testing next grid until no fractal exists
#include <stdio.h>
int scan() {
    int num = 0;
    char c = getchar_unlocked();
    while (c>'9'||c<'0') c = getchar_unlocked();
    while (c>='0'&&c<='9') {
        num=num*10+c-'0';
        c=getchar_unlocked();
    }
    return num;
}
int main() {
    int n=scan(),qx[]={-1,-1,-1,0,0,1,1,1,0},qy[]={-1,0,1,-1,1,-1,0,1,0};
    int a[9][n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++) a[0][i][j]=scan();
    }
    int c=1,f=1,l=0;
    while(f){
        f=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                int f2=2;
                for(int k=0;k<9;k++){
                    if(i+qx[k]*c<0||i+qx[k]*c>=n||j+qy[k]*c<0||j+qy[k]*c>=n||a[l][i+qx[k]*c][j+qy[k]*c]!=0) break;
                    if(k==8) f2=0; // potential center
                }
                for(int k=0;k<8;k++){
                    if(i+qx[k]*c<0||i+qx[k]*c>=n||j+qy[k]*c<0||j+qy[k]*c>=n||a[l][i+qx[k]*c][j+qy[k]*c]!=1) break;
                    if(k==7&&!a[l][i][j]) f2=1; // fractal exists
                }
                if(f2==1) f=1; // something occured
                a[l+1][i][j]=f2;
            }
        } l++;
        
        if(f) c*=3;
    }
    printf("%d\n",c>1?c:0); // print zero if radius is 1
}
